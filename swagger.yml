swagger: '2.0'
info:
  title: TechnoGwent API
  description: API браузерной мультиплеерной карточной игры ТехноГвинт
  version: "0.1.2"
  contact:
    email: kgulyy@my.com
  license:
    name: MIT License
    url: https://github.com/java-park-mail-ru/Gwent-09-2017/blob/master/LICENSE.md
schemes:
- https
host: 'technogwent-api-012.herokuapp.com'
basePath: /api
consumes:
- application/json
produces:
- application/json
paths:
  /join:
    post:
      summary: Регистрация пользователя
      description: |
        Регистрация нового пользователя в игре.
      operationId: signUp
      parameters:
      - name: Origin
        in: header
        description: Домен, с которого осуществлён запрос.
        required: true
        type: string
      - name: UserProfile
        in: body
        description: Данные пользователя.
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        200:
          description: |
            Пользователь успешно зарегистрирован.
          schema:
            $ref: '#/definitions/Message'
        400:
          description: |
            Логин / пароль не указаны или пусты.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            Пользователь с таким логином уже присутсвует в базе данных.
          schema:
            $ref: '#/definitions/Error'
  /auth:
    post:
      summary: Авторизация пользователя
      description: |
        Авторизация пользователя в игре.
      operationId: signIn
      parameters:
      - name: Origin
        in: header
        description: Домен, с которого осуществлён запрос.
        required: true
        type: string
      - name: UserProfile
        in: body
        description: Данные пользователя.
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      responses:
        200:
          description: |
            Пользователь успешно авторизован.
            Либо пользователь уже авторизован.
          schema:
            $ref: '#/definitions/Message'
        400:
          description: |
            Логин / пароль не указаны или пусты.
          schema:
            $ref: '#/definitions/Error'
        403:
          description: |
            Логин / пароль неверны.
            Либо пользователь уже авторизован и пытается авторизоваться под другим логином.
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Получение авторизованного пользователя
      description: |
        Получение данных об авторизованном пользователе
      operationId: getLoggedUserInfo
      parameters:
      - name: Origin
        in: header
        description: Домен, с которого осуществлён запрос.
        required: true
        type: string
      - name: hasPosition
        in: query
        description: |
          Опция для вычисления текущей позиции пользователя в таблице рекордов.
        type: boolean
        default: false
      responses:
        200:
          description: |
            Данные авторизованного пользователя.
          schema:
            $ref: '#/definitions/UserInfo'
        401:
          description: |
            Пользователь не авторизован.
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Выход пользователя из игры
      description: |
        Выход пользователя из игры
      operationId: signOut
      parameters:
      - name: Origin
        in: header
        description: Домен, с которого осуществлён запрос.
        required: true
        type: string
      responses:
        200:
          description: |
            Пользователь вышел из игры.
          schema:
            $ref: '#/definitions/Message'
        401:
          description: |
            Пользователь не авторизован.
          schema:
            $ref: '#/definitions/Error'
  /users:
    get:
      summary: Получение списка пользователей
      description: |
        Получение данных о пользователях, отсортированные по убыванию кол-ва побед и возрастанию логина
      operationId: getUsersOnScoreBoard
      parameters:
      - name: Origin
        in: header
        description: Домен, с которого осуществлён запрос.
        required: true
        type: string
      - name: limit
        in: query
        type: number
        default: 10
        minimum: 0
        description: Максимальное кол-во возвращаемых записей.
      - name: offset
        in: query
        type: number
        default: 0
        description: Позиция с которой возвращаются записи.
      responses:
        200:
          description: |
            Данные авторизованного пользователя.
          schema:
            $ref: '#/definitions/Users'
        401:
          description: |
            Пользователь не авторизован.
          schema:
            $ref: '#/definitions/Error'
definitions:
  UserProfile:
    description: Профиль пользователя.
    type: object
    properties:
      login:
        type: string
        format: identity
        description: Имя пользователя (уникальное поле).
        example: captain
        x-isnullable: false
      password:
        type: string
        description: Пароль пользователя
        example: captain123
        x-isnullable: false
      email:
        type: string
        format: email
        description: Почтовый адрес пользователя.
        example: captain@blackpearl.sea
        x-isnullable: true
    required:
    - login
    - password
  UserInfo:
    description: Информация о пользователе.
    type: object
    properties:
      login:
        type: string
        format: identity
        description: Имя пользователя (уникальное поле).
        example: captain
        x-isnullable: false
      email:
        type: string
        format: email
        description: Почтовый адрес пользователя.
        example: captain@blackpearl.sea
        x-isnullable: true
      wins:
        type: integer
        description: Кол-во выигранных партий
        example: 5
        x-isnullable: false
      position:
        type: integer
        description: Позиция в таблице лидеров
        example: 8
        x-isnullable: true
  Users:
    type: array
    items:
      $ref: '#/definitions/UserInfo'
  Message:
    type: object
    properties:
      message:
        type: string
        readOnly: true
        description: Текстовое сообщение.
        example: Message example
  Error:
    type: object
    properties:
      message:
        type: string
        readOnly: true
        description: Текстовое описание ошибки.
        example: Error message example